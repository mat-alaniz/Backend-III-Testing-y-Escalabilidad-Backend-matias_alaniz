# Documentación del módulo de Users
openapi: "3.0.1"
info:
  title: Users API
  version: "1.0.0"
  description: Documentación del módulo de Users
servers:
  - url: http://localhost:8080
    description: Servidor local

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID único del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del usuario
        pets:
          type: array
          items:
            type: string
          description: Array de IDs de mascotas del usuario
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
      example:
        _id: "507f1f77bcf86cd799439011"
        first_name: "Juan"
        last_name: "Pérez"
        email: "juan@example.com"
        pets: ["507f1f77bcf86cd799439012"]
        createdAt: "2024-01-15T10:30:00.000Z"
        updatedAt: "2024-01-15T10:30:00.000Z"

    Error:
      type: object
      properties:
        status:
          type: string
          description: Estado de la respuesta
        error:
          type: string
          description: Mensaje de error principal
        message:
          type: string
          description: Mensaje opcional (compatibilidad)
      example:
        status: "error"
        error: "Usuario no encontrado"

paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Obtener todos los usuarios
      description: Retorna una lista de todos los usuarios registrados en el sistema
      responses:
        '200':
          description: Lista de usuarios obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/users/{uid}:
    get:
      tags:
        - Users
      summary: Obtener usuario por ID
      description: Retorna un usuario específico basado en su ID
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario
          schema:
            type: string
      responses:
        '200':
          description: Usuario encontrado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  payload:
                    $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Users
      summary: Actualizar usuario
      description: Actualiza la información de un usuario existente
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Nuevo nombre del usuario
                last_name:
                  type: string
                  description: Nuevo apellido del usuario
                email:
                  type: string
                  description: Nuevo email del usuario
              example:
                first_name: "Carlos"
                last_name: "Gómez"
                email: "carlos@example.com"
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Usuario actualizado correctamente"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Users
      summary: Eliminar usuario
      description: Elimina un usuario del sistema
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        '200':
          description: Usuario eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Usuario eliminado correctamente"
        '404':
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'